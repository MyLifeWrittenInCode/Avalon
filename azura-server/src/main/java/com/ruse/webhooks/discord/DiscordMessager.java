package com.ruse.webhooks.discord;

import java.awt.Color;
import java.net.URI;

import org.json.JSONObject;

import com.ruse.util.Misc;

import ca.momoperes.canarywebhooks.DiscordMessage;
import ca.momoperes.canarywebhooks.WebhookClient;
import ca.momoperes.canarywebhooks.WebhookClientBuilder;
import ca.momoperes.canarywebhooks.embed.DiscordEmbed;

public class DiscordMessager extends JSONObject {

	public static boolean active = true;

	public static void test(String msg) {
		try {

			String testhook = "https://discordapp.com/api/webhooks/749432787479560212/LdggLt4y-t6L1t20Ni7-508DfES0H-4IdyLsngxE3k_x9w92r4LgSZ-Wa5MzN-tyiSsn";
			String webhook = testhook;

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("NecroticRSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.YELLOW) // The color of the embed. You can leave this at null for no color
					.withDescription("This message was generated by the server.") // The description of the embed object
					.build(); // Build the embed element

			if (msg == null || msg == "") {
				msg = new String(
						"```hi this is a server test``` @everyone @crimson @crimson#2406 test \"quotes\" \nnewline :fire: :100: :ironman:");
			}

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg)) // The content of the
																								// message
					.withEmbed(embed) // Add our embed object
					.withUsername("Necrotic Bot") // Override the username of the bot
					.build(); // Build the message

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendRules(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discord.com/api/webhooks/983470634304675850/v1rdbrXWCpule0_2fKc1AvGt0V3W-VNCBM5aKuk5kOLTkufAtWLKxu4mIxss9Kk-wIZp";
			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
			// client

			DiscordEmbed embed = new DiscordEmbed.Builder().withTitle("Toxic Behavior")
					//.withURL("http://Avalon317.com")
					.withColor(Color.orange)
					.withDescription("- Flaming: the act of posting insults, often including profanity or other offensive language, on the internet. Trolling: a malicious online behavior, characterized by aggressive and deliberate provocation of others. Racism: prejudice, discrimination, or antagonism directed against a person or people on the basis of their membership in a particular racial or ethnic group, typically one that is a minority or marginalized. Sexism: prejudice, stereotyping, or discrimination, typically against women, on the basis of sex. Religious Discrimination: the act of making fun of someone for their religious beliefs or lack of. Spamming/Caps: spamming one word or short sentences, using capitol letters excessively, or advertising is strictly forbidden. - You are not allowed to advertise an other RSPS related material. Known links such as YouTube are allowed unless determined by a staff member that your intention is to sway players to another server. Causing drama in any way isnt tolerated. We all hold ourselves to a high standard. If you dont like someone ignore them or block them. Toxicity in any fashion will now be taken with 0 tolerance. Toxicity of any kind will get you an instant mute, no warnings. What constitutes as toxicity will be up to the Staff Team's discretion. Harassment, Targeting, Baiting, Flame etc are all considered as toxic and will abide by rule #2.")
					.build();

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg))
					.withEmbed(embed)
					.withUsername("Globals")
					.build();

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendDonationBossLog(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discord.com/api/webhooks/964275725811216436/76LexWSyaeqVPZQeOztYbZOb8ooloMwMGt5AZQsMvMAtLZfzQPhTqoyGGfyuz2mEVGdY";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
			// client

			DiscordEmbed embed = new DiscordEmbed.Builder().withTitle("")
					//.withURL("http://Avalon317.com")
					.withColor(Color.orange)
					.withDescription("The Avalon Guardian has spawned at ::guardian")
					.build();

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg))
					.withEmbed(embed)
					.withUsername("Globals")
					.build();

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendNephilimBossLog(String msg) {
		try {
/*
			if (Misc.checkForOwner() || !active) {
				return;
			}
*/
			String webhook = "https://discord.com/api/webhooks/979831153437573182/AhW0QaaFyvU7NzpzJ2jut2FxfT8cPz0vVsRxppN4RjwzPkTo26PKrx3wmhPHCliJudbM";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
			// client

			DiscordEmbed embed = new DiscordEmbed.Builder().withTitle("")
					//.withURL("http://Avalon317.com")
					.withColor(Color.red)
					.withDescription("The Nephilim Warrior has spawned at ::Nephilim")
					.build();

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg))
					 .withEmbed(embed)
					.withUsername("Globals")
					.build();

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	

	public static void sendVoteBossLog(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discord.com/api/webhooks/963120303133835334/0y0GdPvBsQcMz8P889Z83R74luopoF9G-wPsJam4hEtuWu5FMB2hMJWS4JPcFvldm_7g";


			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build();
			DiscordEmbed embed = new DiscordEmbed.Builder().withTitle("")
					//.withURL("http://Avalon317.com")
					.withColor(Color.BLUE)
					.withDescription("Vote boss has spawned at ::Vboss")
					.build();

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg))
					.withEmbed(embed)
					.withUsername("Globals")
					.build();

			client.sendPayload(message);


		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void sendAnnouncement(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/264978407408795648/xEBWbkd51PIrM_Bv8xuYCWnTWonLAbVGcz_mNH62m0xfwSFnc62To2u_Q82vcp2G_oEo";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder().withTitle("Necrotic - RSPS") // The title of the embed
																							// element
					.withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.GREEN) // The color of the embed. You can leave this at null for no color
					.withDescription(
							"Remember, you can mute any specific channel by clicking the bell in the top right of Discord.") // The
																																// description
																																// of
																																// the
																																// embed
																																// object
					.build(); // Build the embed element

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg)) // The content of the
																								// message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Announcement Bot") // Override the username of the bot
					.build(); // Build the message

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendStaffMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/264978499528294420/XXkZF8s6k3f5MTgvJ8mAiok3W_ushBbSVaFfbo1UULqvmFtYfw0KNJFSpA85gh3Y7gws";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("Necrotic - RSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.ORANGE) // The color of the embed. You can leave this at null for no color
					.withDescription(
							"Remember, you can mute any specific channel by clicking the bell in the top right of Discord.") // The
																																// description
																																// of
																																// the
																																// embed
																																// object
					.build(); // Build the embed element

			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg)) // The content of the
																								// message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Staff Bot") // Override the username of the bot
					.build(); // Build the message

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendChatMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/299740022821879811/73pNXpfq3kMJSR6UNgMZqyWwPebyaYT4A_WAdwihXJNooKzPwdwgbAs8eDb3S2Jf5HAY";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("Necrotic - RSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.YELLOW) // The color of the embed. You can leave this at null for no color
					// .withDescription("Remember, you can mute any specific channel by clicking the
					// bell in the top right of Discord.") // The description of the embed object
					.build(); // Build the embed element

			String msgToSend = Misc.stripIngameFormat(msg);

			DiscordMessage message = new DiscordMessage.Builder(msgToSend) // The content of the message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Chat Bot") // Override the username of the bot
					.build(); // Build the message

			if (msgToSend.equalsIgnoreCase(":information_source:!")) {
				sendDebugMessage("Bad message from sendChatMessage, \n" + msgToSend);
			} else {
				client.sendPayload(message);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendClanMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/299784483404644353/3M1Z_qzhen3C9FwDQXJeJ5NTzGTIYGkJBUo4jIucIJogJaLmXC8ukLhbloziNisZmiaN";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("Necrotic - RSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.GREEN) // The color of the embed. You can leave this at null for no color
					// .withDescription("Remember, you can mute any specific channel by clicking the
					// bell in the top right of Discord.") // The description of the embed object
					.build(); // Build the embed element

			String msgToSend = Misc.stripIngameFormat(msg);

			DiscordMessage message = new DiscordMessage.Builder(msgToSend) // The content of the message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Clan Bot") // Override the username of the bot
					.build(); // Build the message

			if (msgToSend.equalsIgnoreCase(":information_source:!")) {
				sendDebugMessage("Bad message from sendClanMessage, \n" + msgToSend);
			} else {
				client.sendPayload(message);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendPrivateMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/299735829218066432/TuAXNO5mgU93wRMEjnCsDiUZD3uco0AlrpPMYWt3yXt4px-X9FvbbxDgTERqFWUBA19l";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("Necrotic - RSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.MAGENTA) // The color of the embed. You can leave this at null for no color
					// .withDescription("Remember, you can mute any specific channel by clicking the
					// bell in the top right of Discord.") // The description of the embed object
					.build(); // Build the embed element

			String msgToSend = Misc.stripIngameFormat(msg);

			DiscordMessage message = new DiscordMessage.Builder(msgToSend) // The content of the message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Privacy Bot") // Override the username of the bot
					.build(); // Build the message

			if (msgToSend.equalsIgnoreCase(":information_source:!")) {
				sendDebugMessage("Bad message from sendPrivateMessage, \n" + msgToSend);
			} else {
				client.sendPayload(message);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendInGameMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/264978586488930304/09Ondbuw6zvWtH9dltOZq30nLnRYp-y9xMPkPDa1xs4MyELl3kmftdiUFnyHzsx-ciGt";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("Necrotic - RSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.BLUE) // The color of the embed. You can leave this at null for no color
					.withDescription(
							"Remember, you can mute any specific channel by clicking the bell in the top right of Discord.") // The
																																// description
																																// of
																																// the
																																// embed
																																// object
					.build(); // Build the embed element

			String msgToSend = Misc.stripIngameFormat(msg);

			DiscordMessage message = new DiscordMessage.Builder(msgToSend) // The content of the message
					// .withEmbed(embed) // Add our embed object
					.withUsername("In-Game Bot") // Override the username of the bot
					.build(); // Build the message

			if (msgToSend.equalsIgnoreCase(":information_source:!")) {
				sendDebugMessage("Bad message from sendInGameMessage, \n" + msgToSend);
			} else {
				client.sendPayload(message);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendDebugMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/264978075513651221/4Qk7idRA2NbAmno_FOSmN8PH9D3_H4Un09eV3sg9Wx2TPOJjumuIFTi4dOprX_7cWmGa";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder().withTitle("Necrotic - RSPS") // The title of the embed
																							// element
					.withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.MAGENTA) // The color of the embed. You can leave this at null for no color
					.withDescription(
							"Remember, you can mute any specific channel by clicking the bell in the top right of Discord.") // The
																																// description
																																// of
																																// the
																																// embed
																																// object
					.build(); // Build the embed element

			// DiscordMessage message = new DiscordMessage.Builder(msg)
			DiscordMessage message = new DiscordMessage.Builder(Misc.stripIngameFormat(msg)) // The content of the
																								// message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Debug Bot") // Override the username of the bot
					.build(); // Build the message

			client.sendPayload(message);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void sendYellMessage(String msg) {
		try {

			if (Misc.checkForOwner() || !active) {
				return;
			}

			String webhook = "https://discordapp.com/api/webhooks/265081936165339137/NisWUHGJ8gR-tINeMHMBjQ7H-EJ8b6DznSx75f_NokM5DbIUuo7S874Ah9u3r4FRPYEx";

			WebhookClient client = new WebhookClientBuilder().withURI(new URI(webhook)).build(); // Create the webhook
																									// client

			DiscordEmbed embed = new DiscordEmbed.Builder()
					// .withTitle("Necrotic - RSPS") // The title of the embed element
					// .withURL("http://necrotic.org/") // The URL of the embed element
					.withColor(Color.WHITE) // The color of the embed. You can leave this at null for no color
					.withDescription(
							"Remember, you can mute any specific channel by clicking the bell in the top right of Discord.") // The
																																// description
																																// of
																																// the
																																// embed
																																// object
					.build(); // Build the embed element

			String msgToSend = Misc.stripIngameFormat(msg);

			DiscordMessage message = new DiscordMessage.Builder(msgToSend) // The content of the message
					// .withEmbed(embed) // Add our embed object
					.withUsername("Yell Bot") // Override the username of the bot
					.build(); // Build the message

			if (msgToSend.equalsIgnoreCase(":information_source:!")) {
				sendDebugMessage("Bad message from sendYellMessage, \n" + msgToSend);
			} else {
				client.sendPayload(message);
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/*
	 * // System.out.println("test"); URL url = new URL(
	 * "https://discordapp.com/api/webhooks/264884075129470976/NvJNe980SYO3DKjOPxoJRx9ew6Y9T6jYxteG_HOZ9zPNewCUj2vskZZMsjtzBiiOn75J"
	 * ); HttpURLConnection conn = (HttpURLConnection) url.openConnection();
	 * conn.setDoOutput(true); conn.setRequestMethod("POST");
	 * conn.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
	 * conn.setRequestProperty("Accept", "application/json; charset=UTF-8");
	 *
	 * JSONObject discord = new JSONObject();
	 *
	 * //ARGS: username, content, avatar_url, tts discord.put("username", "test");
	 * discord.put("content",
	 * "@everyone hallo it is me a fRIENDD!@@#!@#!@#!@#!@#!@#!@#!@#!@#");
	 *
	 * //discord.put("avatar_url", "http://i.imgur.com/4Da0jRZ.png");
	 * //discord.put("tts", false);
	 *
	 * OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
	 * discord.write(wr); wr.flush();
	 *
	 * StringBuilder sb = new StringBuilder(); int HttpResult =
	 * conn.getResponseCode(); if (HttpResult == HttpURLConnection.HTTP_OK) {
	 * // System.out.println("HTTP = OK"); BufferedReader br = new BufferedReader( new
	 * InputStreamReader(conn.getInputStream(), "utf-8")); String line = null; while
	 * ((line = br.readLine()) != null) { sb.append(line + "\n"); } br.close();
	 * // System.out.println("" + sb.toString()); } else {
	 * // System.out.println("HTTP = NOT OK");
	 * // System.out.println(conn.getResponseMessage()); }
	 */

}
